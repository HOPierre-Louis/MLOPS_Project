# -*- coding: utf-8 -*-
"""fashion_mnist_notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KHOKQaEGRSl4cAuPDzjNhXsFQ3mLaZTM

# **Import**
"""

from keras.models import Sequential
from keras.layers import Dense, Flatten
from keras.utils import to_categorical
import numpy as np
import matplotlib.pyplot as plt

"""# **Load Data**

"""

# labels
class_labels = {
    0: 'T-shirt/top',
    1: 'Trouser',
    2: 'Pullover',
    3: 'Dress',
    4: 'Coat',
    5: 'Sandal',
    6: 'Shirt',
    7: 'Sneaker',
    8: 'Bag',
    9: 'Ankle boot'
}

# load the data
data = np.loadtxt('/content/drive/MyDrive/MLops/data/fashion-mnist-train-1.csv', delimiter=',', skiprows=1)
train_images = data[:, 1:]
train_labels = data[:, 0]
train_images = train_images.reshape(train_images.shape[0], 28, 28, 1)
train_images = train_images / 255
train_labels = to_categorical(train_labels)

# load the test data
test_data = np.loadtxt('/content/drive/MyDrive/MLops/data/fashion-mnist_test.csv', delimiter=',', skiprows=1)
test_images = test_data[:, 1:]
test_labels = test_data[:, 0]
test_images = test_images.reshape(test_images.shape[0], 28, 28, 1)
test_images = test_images / 255
test_labels = to_categorical(test_labels)

"""# **Training**"""

# define the model
model = Sequential()
model.add(Flatten(input_shape=(28, 28, 1)))
model.add(Dense(128, activation='relu'))
model.add(Dense(10, activation='softmax'))

model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(train_images, train_labels, epochs=50, batch_size=32)

"""# **Testing**"""

test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=0)
print('Test accuracy:', test_acc)

predictions = model.predict(test_images)

# print out the predicted label and corresponding class name
for i in range(30):
    predicted_label = np.argmax(predictions[i])
    true_label = np.argmax(test_labels[i])
    print(f'Example {i+1} :')
    print(f'Expected: {true_label} ({class_labels[true_label]})')
    print(f'Predicted: {predicted_label} ({class_labels[predicted_label]})')

"""# **Export the model**"""

model.save('/content/drive/MyDrive/MLops/data/fashion_mnist_model.h5')